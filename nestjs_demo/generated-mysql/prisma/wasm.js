
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProductsScalarFieldEnum = {
  id: 'id',
  product_name: 'product_name',
  price: 'price',
  manufacturer: 'manufacturer',
  attributes: 'attributes'
};

exports.Prisma.SanphamScalarFieldEnum = {
  id: 'id',
  sku: 'sku',
  ten: 'ten',
  gia: 'gia',
  so_luong: 'so_luong',
  danh_muc: 'danh_muc',
  mo_ta: 'mo_ta',
  ngay_tao: 'ngay_tao',
  ngay_cap_nhat: 'ngay_cap_nhat'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.productsOrderByRelevanceFieldEnum = {
  product_name: 'product_name',
  manufacturer: 'manufacturer'
};

exports.Prisma.sanphamOrderByRelevanceFieldEnum = {
  sku: 'sku',
  ten: 'ten',
  danh_muc: 'danh_muc',
  mo_ta: 'mo_ta'
};


exports.Prisma.ModelName = {
  products: 'products',
  sanpham: 'sanpham'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/MAC/Documents/source/nodeadv_05/nestjs_demo/generated-mysql/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/MAC/Documents/source/nodeadv_05/nestjs_demo/prisma/schema-mysql.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL_MYSQL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated-mysql/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL_MYSQL\")\n}\n\nmodel products {\n  id           Int     @id @default(autoincrement())\n  product_name String? @db.VarChar(100)\n  price        Int?\n  manufacturer String? @db.VarChar(100)\n  attributes   Json?\n}\n\nmodel sanpham {\n  id            BigInt   @id\n  sku           String   @db.VarChar(32)\n  ten           String   @db.VarChar(255)\n  gia           Decimal  @db.Decimal(12, 0)\n  so_luong      Int\n  danh_muc      String?  @db.VarChar(64)\n  mo_ta         String?  @db.Text\n  ngay_tao      DateTime @db.DateTime(0)\n  ngay_cap_nhat DateTime @db.DateTime(0)\n\n  @@index([ten], map: \"ftx_ten_ngram\")\n}\n",
  "inlineSchemaHash": "522ad9139a2e0894ba196846533b1c6a8534aee598bb6515a54c95a9cd59d735",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"products\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"manufacturer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attributes\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"sanpham\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ten\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gia\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"so_luong\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"danh_muc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mo_ta\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ngay_tao\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ngay_cap_nhat\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL_MYSQL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL_MYSQL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL_MYSQL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

